{"ast":null,"code":"var _jsxFileName = \"/workspaces/project-orchestrator/frontend/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatWindow({\n  onClose,\n  position = \"bottom-right\",\n  mode = \"production\"\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: \"bot\",\n    text: \"Hi — describe your project and I'll help estimate it.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const [pendingQuestions, setPendingQuestions] = useState([]); // questions queue\n  const [currentQIndex, setCurrentQIndex] = useState(0);\n  const [answers, setAnswers] = useState([]); // collected answers in order\n  const [lastUserQuery, setLastUserQuery] = useState(\"\"); // original user text for follow-up\n  const [completed, setCompleted] = useState(false); // whether flow finished with an estimate\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const [quoteCreated, setQuoteCreated] = useState(false);\n  const [latestSowB64, setLatestSowB64] = useState(null);\n  const saveTimerRef = useRef(null);\n  const listRef = useRef(null);\n  useEffect(() => {\n    if (listRef.current) listRef.current.scrollTop = listRef.current.scrollHeight;\n  }, [messages, pendingQuestions, currentQIndex]);\n\n  // Auto-save chat when messages change (debounced)\n  useEffect(() => {\n    if (saveTimerRef.current) clearTimeout(saveTimerRef.current);\n    saveTimerRef.current = setTimeout(() => {\n      autoSaveChat();\n    }, 1000);\n    return () => clearTimeout(saveTimerRef.current);\n  }, [messages]);\n  const pushMessage = m => setMessages(prev => [...prev, m]);\n  async function autoSaveChat() {\n    try {\n      const payload = {\n        title: `chat-${Date.now()}.json`,\n        messages\n      };\n      await axios.post(\"/api/chat/save\", payload);\n      // no UI noise for autosave\n    } catch (err) {\n      // don't spam errors; log for debugging\n      console.error(\"autosave failed\", err);\n    }\n  }\n  async function sendInitial(text) {\n    setSending(true);\n    try {\n      const res = await axios.post(\"/api/message\", {\n        text,\n        client_info: {},\n        mode\n      });\n      const data = res.data;\n\n      // Always start contact capture interactively when user first provides project description\n      const contactQs = [];\n      if (!contact.name) contactQs.push(\"What's your name?\");\n      if (!contact.email) contactQs.push(\"What's your email?\");\n      const serverQs = Array.isArray(data.questions) ? data.questions : [];\n      const allQs = [...contactQs, ...serverQs];\n      if (allQs.length > 0) {\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        setAnswers([]);\n        pushMessage({\n          from: \"bot\",\n          text: allQs[0]\n        });\n      } else {\n        // no questions — still ask contact if missing\n        if (contactQs.length > 0) {\n          setPendingQuestions(contactQs);\n          setCurrentQIndex(0);\n          setAnswers([]);\n          pushMessage({\n            from: \"bot\",\n            text: contactQs[0]\n          });\n        } else if (data.status === \"completed\") {\n          // show estimate immediately if provided\n          handleCompletedResponse(data);\n        } else if (data.summary) {\n          pushMessage({\n            from: \"bot\",\n            text: data.summary\n          });\n        }\n      }\n    } catch (err) {\n      pushMessage({\n        from: \"bot\",\n        text: \"Error contacting server.\"\n      });\n    } finally {\n      setSending(false);\n    }\n  }\n  async function sendFollowUp() {\n    setSending(true);\n    try {\n      const followPayload = {\n        text: lastUserQuery,\n        client_info: {\n          answers\n        },\n        mode\n      };\n      const res = await axios.post(\"/api/message\", followPayload);\n      const data = res.data;\n      setPendingQuestions([]);\n      setCurrentQIndex(0);\n      setAnswers([]);\n      if (data.status === \"completed\") {\n        handleCompletedResponse(data);\n      } else if (Array.isArray(data.questions) && data.questions.length > 0) {\n        // if contact missing ensure contact questions come first\n        const contactQs = [];\n        if (!contact.name) contactQs.push(\"What's your name?\");\n        if (!contact.email) contactQs.push(\"What's your email?\");\n        const allQs = [...contactQs, ...data.questions];\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        pushMessage({\n          from: \"bot\",\n          text: allQs[0]\n        });\n      } else {\n        pushMessage({\n          from: \"bot\",\n          text: JSON.stringify(data)\n        });\n      }\n    } catch (err) {\n      pushMessage({\n        from: \"bot\",\n        text: \"Error contacting server on follow-up.\"\n      });\n    } finally {\n      setSending(false);\n    }\n  }\n  async function handleSend() {\n    const text = input.trim();\n    if (!text) return;\n\n    // If question flow active, treat input as answer\n    if (pendingQuestions.length > 0) {\n      pushMessage({\n        from: \"user\",\n        text\n      });\n      setAnswers(prev => [...prev, {\n        question: pendingQuestions[currentQIndex],\n        answer: text\n      }]);\n      const qText = (pendingQuestions[currentQIndex] || \"\").toLowerCase();\n      if (qText.includes(\"name\") && !contact.name) {\n        setContact(c => ({\n          ...c,\n          name: text\n        }));\n      }\n      if (qText.includes(\"email\") && !contact.email) {\n        setContact(c => ({\n          ...c,\n          email: text\n        }));\n      }\n      if (qText.includes(\"phone\") && !contact.phone) {\n        setContact(c => ({\n          ...c,\n          phone: text\n        }));\n      }\n      setInput(\"\");\n      if (currentQIndex + 1 < pendingQuestions.length) {\n        const nextIndex = currentQIndex + 1;\n        setCurrentQIndex(nextIndex);\n        pushMessage({\n          from: \"bot\",\n          text: pendingQuestions[nextIndex]\n        });\n      } else {\n        // finished Qs -> aggregated follow-up\n        await sendFollowUp();\n      }\n      return;\n    }\n\n    // new initial project description\n    pushMessage({\n      from: \"user\",\n      text\n    });\n    setInput(\"\");\n    setLastUserQuery(text);\n    await sendInitial(text);\n  }\n  function _extract_sow_b64_from_last_bot() {\n    const sow_text = messages.filter(m => m.from === \"bot\").map(m => m.text).join(\"\\n\\n\");\n    try {\n      return btoa(unescape(encodeURIComponent(sow_text)));\n    } catch (e) {\n      return btoa(sow_text);\n    }\n  }\n  async function handleCompletedResponse(data) {\n    // If contact required and missing, ask for contact before finalizing the quote\n    if (!contact.name || !contact.email) {\n      const contactQs = [];\n      if (!contact.name) contactQs.push(\"What's your name?\");\n      if (!contact.email) contactQs.push(\"What's your email?\");\n      setPendingQuestions(contactQs);\n      setCurrentQIndex(0);\n      pushMessage({\n        from: \"bot\",\n        text: contactQs[0]\n      });\n      // store the completed payload so that when contact provided we finalize\n      // save it into messages for later processing via latestSowB64 and quoteCreated\n      // but do not mark quoteCreated until contact present\n      // store data temporarily on window object to avoid adding more state complexity\n      window.__pending_completed_payload = data;\n      return;\n    }\n    if (data.summary) pushMessage({\n      from: \"bot\",\n      text: data.summary\n    });\n    if (data.estimate && data.estimate.totalCost) pushMessage({\n      from: \"bot\",\n      text: `Total cost: ${data.estimate.totalCost}`\n    });\n    if (data.sow) {\n      try {\n        const sowText = atob(data.sow);\n        pushMessage({\n          from: \"bot\",\n          text: sowText\n        });\n        setLatestSowB64(data.sow);\n      } catch (e) {\n        setLatestSowB64(null);\n      }\n    }\n    setCompleted(true);\n    setQuoteCreated(true);\n\n    // auto-send lead (HubSpot) now that contact exists\n    if (contact.name && contact.email) {\n      await sendLead({\n        completed: true,\n        sow_b64: data.sow\n      });\n    }\n  }\n\n  // if contact becomes available and there is a pending completed payload, finalize now\n  useEffect(() => {\n    if (contact.name && contact.email && window.__pending_completed_payload) {\n      const pending = window.__pending_completed_payload;\n      window.__pending_completed_payload = null;\n      // finalize and mark as completed using the pending payload\n      handleCompletedResponse(pending);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contact.name, contact.email]);\n  async function downloadPdf() {\n    if (!quoteCreated) {\n      alert(\"Quote PDF will be available once estimate is created (after clarifying questions).\");\n      return;\n    }\n    try {\n      const payload = {\n        title: `ProjectQuote-${Date.now()}`,\n        sow_b64: latestSowB64,\n        estimate: {} // server will use sow_b64 if provided\n      };\n      const resp = await axios.post(\"/api/sow/pdf\", payload, {\n        responseType: \"blob\"\n      });\n      const blob = new Blob([resp.data], {\n        type: \"application/pdf\"\n      });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${payload.title}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to generate PDF.\");\n    }\n  }\n  async function sendLead({\n    completed = false,\n    sow_b64 = null\n  } = {}) {\n    if (!contact.name || !contact.email) return;\n    try {\n      const payload = {\n        name: contact.name,\n        email: contact.email,\n        message: completed ? \"Project quote completed via estimator\" : \"Chat interrupted / incomplete - request follow up\",\n        sow_b64,\n        chat: messages\n      };\n      await axios.post(\"/api/hubspot/send\", payload);\n      pushMessage({\n        from: \"bot\",\n        text: \"Thanks — your lead was sent to our sales team.\"\n      });\n    } catch (err) {\n      console.error(\"sendLead\", err);\n      pushMessage({\n        from: \"bot\",\n        text: \"Unable to send contact to sales automatically.\"\n      });\n    }\n  }\n\n  // onClose handler: require contact before closing without sending lead;\n  // if contact provided, send interrupted lead automatically.\n  async function handleClose() {\n    if (!contact.name || !contact.email) {\n      const ok = window.confirm(\"You haven't provided name and email. Sales team needs contact info to follow up. Close anyway?\");\n      if (!ok) return;\n    }\n    if (!completed && (contact.name || contact.email || contact.phone)) {\n      await sendLead({\n        completed: false,\n        sow_b64: _extract_sow_b64_from_last_bot()\n      });\n    }\n    onClose && onClose();\n  }\n\n  // improved Send button UI and Close button UI styling\n  const BtnPrimary = ({\n    children,\n    onClick,\n    disabled\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    disabled: disabled,\n    style: {\n      background: disabled ? \"#94a3b8\" : \"#1d4ed8\",\n      color: \"#fff\",\n      padding: \"8px 14px\",\n      borderRadius: 10,\n      border: \"none\",\n      boxShadow: \"0 2px 6px rgba(0,0,0,0.08)\",\n      cursor: disabled ? \"not-allowed\" : \"pointer\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n  const BtnGhost = ({\n    children,\n    onClick\n  }) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    style: {\n      background: \"transparent\",\n      color: \"#374151\",\n      padding: \"8px 12px\",\n      borderRadius: 8,\n      border: \"1px solid #e5e7eb\",\n      cursor: \"pointer\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-window ${position === \"bottom-left\" ? \"chat-btn-left\" : \"chat-btn-right\"}`,\n    style: {\n      width: 420,\n      boxShadow: \"0 6px 18px rgba(15,23,42,0.12)\",\n      borderRadius: 10,\n      overflow: \"hidden\",\n      fontFamily: \"Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 12,\n        borderBottom: \"1px solid #eee\",\n        background: \"#fff\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            fontSize: 14\n          },\n          children: [\"Project Quote & Estimator (\", mode, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: \"#6b7280\"\n          },\n          children: \"Describe your project and I'll help estimate it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BtnGhost, {\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: listRef,\n      style: {\n        padding: 12,\n        height: 340,\n        overflowY: \"auto\",\n        background: \"#f8fbff\"\n      },\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10,\n          display: \"flex\",\n          justifyContent: m.from === \"user\" ? \"flex-end\" : \"flex-start\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: \"78%\",\n            display: \"inline-block\",\n            padding: \"10px 12px\",\n            borderRadius: 12,\n            background: m.from === \"user\" ? \"#eef2ff\" : \"#ffffff\",\n            boxShadow: m.from === \"user\" ? \"none\" : \"0 1px 2px rgba(0,0,0,0.03)\",\n            color: \"#111827\",\n            fontSize: 13,\n            lineHeight: \"18px\"\n          },\n          children: m.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 12,\n        borderTop: \"1px solid #eee\",\n        background: \"#fff\",\n        display: \"flex\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: pendingQuestions.length > 0 ? \"Answer the question...\" : \"Describe your project...\",\n        style: {\n          flex: 1,\n          padding: \"10px 12px\",\n          borderRadius: 8,\n          border: \"1px solid #e6eef8\"\n        },\n        onKeyDown: e => {\n          if (e.key === \"Enter\") handleSend();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BtnPrimary, {\n        onClick: handleSend,\n        disabled: sending,\n        children: sending ? \"Sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10,\n        borderTop: \"1px solid #f1f5f9\",\n        background: \"#fff\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#6b7280\",\n          fontSize: 12,\n          alignSelf: \"center\"\n        },\n        children: quoteCreated ? \"Quote ready — you can download or save.\" : \"Chat saved automatically.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(BtnGhost, {\n          onClick: () => {\n            navigator.clipboard.writeText(window.location.href);\n            pushMessage({\n              from: \"bot\",\n              text: \"Link copied.\"\n            });\n          },\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BtnPrimary, {\n          onClick: downloadPdf,\n          disabled: !quoteCreated,\n          children: \"Download Quote PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"fXRdFr5Rl9KAnUHVLwPyhHJV2Q4=\");\n_c = ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatWindow","onClose","position","mode","_s","messages","setMessages","from","text","input","setInput","sending","setSending","pendingQuestions","setPendingQuestions","currentQIndex","setCurrentQIndex","answers","setAnswers","lastUserQuery","setLastUserQuery","completed","setCompleted","contact","setContact","name","email","phone","quoteCreated","setQuoteCreated","latestSowB64","setLatestSowB64","saveTimerRef","listRef","current","scrollTop","scrollHeight","clearTimeout","setTimeout","autoSaveChat","pushMessage","m","prev","payload","title","Date","now","post","err","console","error","sendInitial","res","client_info","data","contactQs","push","serverQs","Array","isArray","questions","allQs","length","status","handleCompletedResponse","summary","sendFollowUp","followPayload","JSON","stringify","handleSend","trim","question","answer","qText","toLowerCase","includes","c","nextIndex","_extract_sow_b64_from_last_bot","sow_text","filter","map","join","btoa","unescape","encodeURIComponent","e","window","__pending_completed_payload","estimate","totalCost","sow","sowText","atob","sendLead","sow_b64","pending","downloadPdf","alert","resp","responseType","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","message","chat","handleClose","ok","confirm","BtnPrimary","children","onClick","disabled","style","background","color","padding","borderRadius","border","boxShadow","cursor","fileName","_jsxFileName","lineNumber","columnNumber","BtnGhost","className","width","overflow","fontFamily","borderBottom","display","alignItems","gap","flex","fontSize","ref","height","overflowY","i","marginBottom","justifyContent","maxWidth","lineHeight","borderTop","value","onChange","target","placeholder","onKeyDown","key","alignSelf","navigator","clipboard","writeText","location","_c","$RefreshReg$"],"sources":["/workspaces/project-orchestrator/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n\nexport default function ChatWindow({ onClose, position = \"bottom-right\", mode = \"production\" }) {\n  const [messages, setMessages] = useState([\n    { from: \"bot\", text: \"Hi — describe your project and I'll help estimate it.\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const [pendingQuestions, setPendingQuestions] = useState([]); // questions queue\n  const [currentQIndex, setCurrentQIndex] = useState(0);\n  const [answers, setAnswers] = useState([]); // collected answers in order\n  const [lastUserQuery, setLastUserQuery] = useState(\"\"); // original user text for follow-up\n  const [completed, setCompleted] = useState(false); // whether flow finished with an estimate\n  const [contact, setContact] = useState({ name: \"\", email: \"\", phone: \"\" });\n  const [quoteCreated, setQuoteCreated] = useState(false);\n  const [latestSowB64, setLatestSowB64] = useState(null);\n  const saveTimerRef = useRef(null);\n  const listRef = useRef(null);\n\n  useEffect(() => {\n    if (listRef.current) listRef.current.scrollTop = listRef.current.scrollHeight;\n  }, [messages, pendingQuestions, currentQIndex]);\n\n  // Auto-save chat when messages change (debounced)\n  useEffect(() => {\n    if (saveTimerRef.current) clearTimeout(saveTimerRef.current);\n    saveTimerRef.current = setTimeout(() => {\n      autoSaveChat();\n    }, 1000);\n    return () => clearTimeout(saveTimerRef.current);\n  }, [messages]);\n\n  const pushMessage = (m) => setMessages(prev => [...prev, m]);\n\n  async function autoSaveChat() {\n    try {\n      const payload = { title: `chat-${Date.now()}.json`, messages };\n      await axios.post(\"/api/chat/save\", payload);\n      // no UI noise for autosave\n    } catch (err) {\n      // don't spam errors; log for debugging\n      console.error(\"autosave failed\", err);\n    }\n  }\n\n  async function sendInitial(text) {\n    setSending(true);\n    try {\n      const res = await axios.post(\"/api/message\", { text, client_info: {}, mode });\n      const data = res.data;\n\n      // Always start contact capture interactively when user first provides project description\n      const contactQs = [];\n      if (!contact.name) contactQs.push(\"What's your name?\");\n      if (!contact.email) contactQs.push(\"What's your email?\");\n      const serverQs = Array.isArray(data.questions) ? data.questions : [];\n      const allQs = [...contactQs, ...serverQs];\n\n      if (allQs.length > 0) {\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        setAnswers([]);\n        pushMessage({ from: \"bot\", text: allQs[0] });\n      } else {\n        // no questions — still ask contact if missing\n        if (contactQs.length > 0) {\n          setPendingQuestions(contactQs);\n          setCurrentQIndex(0);\n          setAnswers([]);\n          pushMessage({ from: \"bot\", text: contactQs[0] });\n        } else if (data.status === \"completed\") {\n          // show estimate immediately if provided\n          handleCompletedResponse(data);\n        } else if (data.summary) {\n          pushMessage({ from: \"bot\", text: data.summary });\n        }\n      }\n    } catch (err) {\n      pushMessage({ from: \"bot\", text: \"Error contacting server.\" });\n    } finally {\n      setSending(false);\n    }\n  }\n\n  async function sendFollowUp() {\n    setSending(true);\n    try {\n      const followPayload = {\n        text: lastUserQuery,\n        client_info: { answers },\n        mode\n      };\n      const res = await axios.post(\"/api/message\", followPayload);\n      const data = res.data;\n\n      setPendingQuestions([]);\n      setCurrentQIndex(0);\n      setAnswers([]);\n\n      if (data.status === \"completed\") {\n        handleCompletedResponse(data);\n      } else if (Array.isArray(data.questions) && data.questions.length > 0) {\n        // if contact missing ensure contact questions come first\n        const contactQs = [];\n        if (!contact.name) contactQs.push(\"What's your name?\");\n        if (!contact.email) contactQs.push(\"What's your email?\");\n        const allQs = [...contactQs, ...data.questions];\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        pushMessage({ from: \"bot\", text: allQs[0] });\n      } else {\n        pushMessage({ from: \"bot\", text: JSON.stringify(data) });\n      }\n    } catch (err) {\n      pushMessage({ from: \"bot\", text: \"Error contacting server on follow-up.\" });\n    } finally {\n      setSending(false);\n    }\n  }\n\n  async function handleSend() {\n    const text = input.trim();\n    if (!text) return;\n\n    // If question flow active, treat input as answer\n    if (pendingQuestions.length > 0) {\n      pushMessage({ from: \"user\", text });\n      setAnswers(prev => [...prev, { question: pendingQuestions[currentQIndex], answer: text }]);\n\n      const qText = (pendingQuestions[currentQIndex] || \"\").toLowerCase();\n      if (qText.includes(\"name\") && !contact.name) {\n        setContact(c => ({ ...c, name: text }));\n      }\n      if (qText.includes(\"email\") && !contact.email) {\n        setContact(c => ({ ...c, email: text }));\n      }\n      if (qText.includes(\"phone\") && !contact.phone) {\n        setContact(c => ({ ...c, phone: text }));\n      }\n\n      setInput(\"\");\n\n      if (currentQIndex + 1 < pendingQuestions.length) {\n        const nextIndex = currentQIndex + 1;\n        setCurrentQIndex(nextIndex);\n        pushMessage({ from: \"bot\", text: pendingQuestions[nextIndex] });\n      } else {\n        // finished Qs -> aggregated follow-up\n        await sendFollowUp();\n      }\n      return;\n    }\n\n    // new initial project description\n    pushMessage({ from: \"user\", text });\n    setInput(\"\");\n    setLastUserQuery(text);\n    await sendInitial(text);\n  }\n\n  function _extract_sow_b64_from_last_bot() {\n    const sow_text = messages.filter(m => m.from === \"bot\").map(m => m.text).join(\"\\n\\n\");\n    try {\n      return btoa(unescape(encodeURIComponent(sow_text)));\n    } catch (e) {\n      return btoa(sow_text);\n    }\n  }\n\n  async function handleCompletedResponse(data) {\n    // If contact required and missing, ask for contact before finalizing the quote\n    if (!contact.name || !contact.email) {\n      const contactQs = [];\n      if (!contact.name) contactQs.push(\"What's your name?\");\n      if (!contact.email) contactQs.push(\"What's your email?\");\n      setPendingQuestions(contactQs);\n      setCurrentQIndex(0);\n      pushMessage({ from: \"bot\", text: contactQs[0] });\n      // store the completed payload so that when contact provided we finalize\n      // save it into messages for later processing via latestSowB64 and quoteCreated\n      // but do not mark quoteCreated until contact present\n      // store data temporarily on window object to avoid adding more state complexity\n      window.__pending_completed_payload = data;\n      return;\n    }\n\n    if (data.summary) pushMessage({ from: \"bot\", text: data.summary });\n    if (data.estimate && data.estimate.totalCost) pushMessage({ from: \"bot\", text: `Total cost: ${data.estimate.totalCost}` });\n    if (data.sow) {\n      try {\n        const sowText = atob(data.sow);\n        pushMessage({ from: \"bot\", text: sowText });\n        setLatestSowB64(data.sow);\n      } catch (e) {\n        setLatestSowB64(null);\n      }\n    }\n\n    setCompleted(true);\n    setQuoteCreated(true);\n\n    // auto-send lead (HubSpot) now that contact exists\n    if (contact.name && contact.email) {\n      await sendLead({ completed: true, sow_b64: data.sow });\n    }\n  }\n\n  // if contact becomes available and there is a pending completed payload, finalize now\n  useEffect(() => {\n    if (contact.name && contact.email && window.__pending_completed_payload) {\n      const pending = window.__pending_completed_payload;\n      window.__pending_completed_payload = null;\n      // finalize and mark as completed using the pending payload\n      handleCompletedResponse(pending);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contact.name, contact.email]);\n\n  async function downloadPdf() {\n    if (!quoteCreated) {\n      alert(\"Quote PDF will be available once estimate is created (after clarifying questions).\");\n      return;\n    }\n    try {\n      const payload = {\n        title: `ProjectQuote-${Date.now()}`,\n        sow_b64: latestSowB64,\n        estimate: {} // server will use sow_b64 if provided\n      };\n      const resp = await axios.post(\"/api/sow/pdf\", payload, { responseType: \"blob\" });\n      const blob = new Blob([resp.data], { type: \"application/pdf\" });\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${payload.title}.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to generate PDF.\");\n    }\n  }\n\n  async function sendLead({ completed = false, sow_b64 = null } = {}) {\n    if (!contact.name || !contact.email) return;\n    try {\n      const payload = {\n        name: contact.name,\n        email: contact.email,\n        message: completed ? \"Project quote completed via estimator\" : \"Chat interrupted / incomplete - request follow up\",\n        sow_b64,\n        chat: messages\n      };\n      await axios.post(\"/api/hubspot/send\", payload);\n      pushMessage({ from: \"bot\", text: \"Thanks — your lead was sent to our sales team.\" });\n    } catch (err) {\n      console.error(\"sendLead\", err);\n      pushMessage({ from: \"bot\", text: \"Unable to send contact to sales automatically.\" });\n    }\n  }\n\n  // onClose handler: require contact before closing without sending lead;\n  // if contact provided, send interrupted lead automatically.\n  async function handleClose() {\n    if (!contact.name || !contact.email) {\n      const ok = window.confirm(\"You haven't provided name and email. Sales team needs contact info to follow up. Close anyway?\");\n      if (!ok) return;\n    }\n    if (!completed && (contact.name || contact.email || contact.phone)) {\n      await sendLead({ completed: false, sow_b64: _extract_sow_b64_from_last_bot() });\n    }\n    onClose && onClose();\n  }\n\n  // improved Send button UI and Close button UI styling\n  const BtnPrimary = ({ children, onClick, disabled }) => (\n    <button\n      onClick={onClick}\n      disabled={disabled}\n      style={{\n        background: disabled ? \"#94a3b8\" : \"#1d4ed8\",\n        color: \"#fff\",\n        padding: \"8px 14px\",\n        borderRadius: 10,\n        border: \"none\",\n        boxShadow: \"0 2px 6px rgba(0,0,0,0.08)\",\n        cursor: disabled ? \"not-allowed\" : \"pointer\"\n      }}\n    >\n      {children}\n    </button>\n  );\n\n  const BtnGhost = ({ children, onClick }) => (\n    <button\n      onClick={onClick}\n      style={{\n        background: \"transparent\",\n        color: \"#374151\",\n        padding: \"8px 12px\",\n        borderRadius: 8,\n        border: \"1px solid #e5e7eb\",\n        cursor: \"pointer\"\n      }}\n    >\n      {children}\n    </button>\n  );\n\n  return (\n    <div className={`chat-window ${position === \"bottom-left\" ? \"chat-btn-left\" : \"chat-btn-right\"}`}\n         style={{ width: 420, boxShadow: \"0 6px 18px rgba(15,23,42,0.12)\", borderRadius: 10, overflow: \"hidden\", fontFamily: \"Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\" }}>\n      <div style={{ padding: 12, borderBottom: \"1px solid #eee\", background: \"#fff\", display: \"flex\", alignItems: \"center\", gap: 8 }}>\n        <div style={{ flex: 1 }}>\n          <strong style={{ fontSize: 14 }}>Project Quote & Estimator ({mode})</strong>\n          <div style={{ fontSize: 12, color: \"#6b7280\" }}>Describe your project and I'll help estimate it.</div>\n        </div>\n        <BtnGhost onClick={handleClose}>Close</BtnGhost>\n      </div>\n\n      <div ref={listRef} style={{ padding: 12, height: 340, overflowY: \"auto\", background: \"#f8fbff\" }}>\n        {messages.map((m, i) => (\n          <div key={i} style={{ marginBottom: 10, display: \"flex\", justifyContent: m.from === \"user\" ? \"flex-end\" : \"flex-start\" }}>\n            <div style={{\n              maxWidth: \"78%\",\n              display: \"inline-block\",\n              padding: \"10px 12px\",\n              borderRadius: 12,\n              background: m.from === \"user\" ? \"#eef2ff\" : \"#ffffff\",\n              boxShadow: m.from === \"user\" ? \"none\" : \"0 1px 2px rgba(0,0,0,0.03)\",\n              color: \"#111827\",\n              fontSize: 13,\n              lineHeight: \"18px\"\n            }}>\n              {m.text}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div style={{ padding: 12, borderTop: \"1px solid #eee\", background: \"#fff\", display: \"flex\", gap: 8 }}>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder={pendingQuestions.length > 0 ? \"Answer the question...\" : \"Describe your project...\"}\n          style={{ flex: 1, padding: \"10px 12px\", borderRadius: 8, border: \"1px solid #e6eef8\" }}\n          onKeyDown={(e) => { if (e.key === \"Enter\") handleSend(); }}\n        />\n        <BtnPrimary onClick={handleSend} disabled={sending}>{sending ? \"Sending...\" : \"Send\"}</BtnPrimary>\n      </div>\n\n      <div style={{ padding: 10, borderTop: \"1px solid #f1f5f9\", background: \"#fff\", display: \"flex\", justifyContent: \"space-between\", gap: 8 }}>\n        <div style={{ color: \"#6b7280\", fontSize: 12, alignSelf: \"center\" }}>\n          {quoteCreated ? \"Quote ready — you can download or save.\" : \"Chat saved automatically.\"}\n        </div>\n        <div style={{ display: \"flex\", gap: 8 }}>\n          <BtnGhost onClick={() => { navigator.clipboard.writeText(window.location.href); pushMessage({from: \"bot\", text: \"Link copied.\"}); }}>Share</BtnGhost>\n          <BtnPrimary onClick={downloadPdf} disabled={!quoteCreated}>Download Quote PDF</BtnPrimary>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}