{"ast":null,"code":"var _jsxFileName = \"/workspaces/project-orchestrator/frontend/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatWindow({\n  onClose,\n  position = \"bottom-right\",\n  mode = \"production\"\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    from: \"bot\",\n    text: \"Hi â€” describe your project and I'll help estimate it.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const [pendingQuestions, setPendingQuestions] = useState([]); // questions queue\n  const [currentQIndex, setCurrentQIndex] = useState(0);\n  const [answers, setAnswers] = useState([]); // collected answers in order\n  const [lastUserQuery, setLastUserQuery] = useState(\"\"); // original user text for follow-up\n  const [completed, setCompleted] = useState(false); // whether flow finished with an estimate\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const [quoteCreated, setQuoteCreated] = useState(false);\n  const [latestSowB64, setLatestSowB64] = useState(null);\n  const saveTimerRef = useRef(null);\n  const listRef = useRef(null);\n  useEffect(() => {\n    if (listRef.current) listRef.current.scrollTop = listRef.current.scrollHeight;\n  }, [messages, pendingQuestions, currentQIndex]);\n\n  // Auto-save chat when messages change (debounced).\n  useEffect(() => {\n    if (saveTimerRef.current) clearTimeout(saveTimerRef.current);\n    saveTimerRef.current = setTimeout(async () => {\n      try {\n        await axios.post(\"/api/chat/save\", {\n          title: `chat-${Date.now()}.json`,\n          messages\n        });\n      } catch (err) {\n        // silent\n        // eslint-disable-next-line no-console\n        console.error(\"autosave failed\", err);\n      }\n    }, 1000);\n    return () => clearTimeout(saveTimerRef.current);\n  }, [messages]);\n  const pushMessage = m => setMessages(prev => [...prev, m]);\n\n  // helper: detect if contact question already answered (in contact state or answers list)\n  function _alreadyAnsweredContact(field) {\n    const key = field.toLowerCase();\n    if (key === \"name\" && contact.name) return true;\n    if (key === \"email\" && contact.email) return true;\n    for (let a of answers) {\n      const q = (a.question || \"\").toLowerCase();\n      if (q.includes(key) && a.answer) return true;\n    }\n    return false;\n  }\n  async function sendInitial(text) {\n    setSending(true);\n    try {\n      const res = await axios.post(\"/api/message\", {\n        text,\n        client_info: {},\n        mode\n      });\n      const data = res.data;\n      const contactQs = [];\n      if (!_alreadyAnsweredContact(\"name\")) contactQs.push(\"What's your name?\");\n      if (!_alreadyAnsweredContact(\"email\")) contactQs.push(\"What's your email?\");\n      const serverQs = Array.isArray(data.questions) ? data.questions : [];\n      // remove any serverQs that are duplicates of contactQs\n      const serverQsFiltered = serverQs.filter(q => {\n        const ql = (q || \"\").toLowerCase();\n        if (ql.includes(\"name\") && _alreadyAnsweredContact(\"name\")) return false;\n        if (ql.includes(\"email\") && _alreadyAnsweredContact(\"email\")) return false;\n        return true;\n      });\n      const allQs = [...contactQs, ...serverQsFiltered];\n      if (allQs.length > 0) {\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        setAnswers([]);\n        pushMessage({\n          from: \"bot\",\n          text: allQs[0]\n        });\n      } else {\n        if (contactQs.length > 0) {\n          setPendingQuestions(contactQs);\n          setCurrentQIndex(0);\n          setAnswers([]);\n          pushMessage({\n            from: \"bot\",\n            text: contactQs[0]\n          });\n        } else if (data.status === \"completed\") {\n          await handleCompletedResponse(data);\n        } else if (data.summary) {\n          pushMessage({\n            from: \"bot\",\n            text: data.summary\n          });\n        }\n      }\n    } catch (err) {\n      pushMessage({\n        from: \"bot\",\n        text: \"Error contacting server.\"\n      });\n    } finally {\n      setSending(false);\n    }\n  }\n  async function sendFollowUp() {\n    setSending(true);\n    try {\n      const followPayload = {\n        text: lastUserQuery,\n        client_info: {\n          answers\n        },\n        mode\n      };\n      const res = await axios.post(\"/api/message\", followPayload);\n      const data = res.data;\n      setPendingQuestions([]);\n      setCurrentQIndex(0);\n      setAnswers([]);\n      if (data.status === \"completed\") {\n        await handleCompletedResponse(data);\n      } else if (Array.isArray(data.questions) && data.questions.length > 0) {\n        const contactQs = [];\n        if (!contact.name) contactQs.push(\"What's your name?\");\n        if (!contact.email) contactQs.push(\"What's your email?\");\n        const allQs = [...contactQs, ...data.questions];\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        pushMessage({\n          from: \"bot\",\n          text: allQs[0]\n        });\n      } else {\n        pushMessage({\n          from: \"bot\",\n          text: JSON.stringify(data)\n        });\n      }\n    } catch (err) {\n      pushMessage({\n        from: \"bot\",\n        text: \"Error contacting server on follow-up.\"\n      });\n    } finally {\n      setSending(false);\n    }\n  }\n  async function handleSend() {\n    const text = input.trim();\n    if (!text) return;\n    if (pendingQuestions.length > 0) {\n      pushMessage({\n        from: \"user\",\n        text\n      });\n      setAnswers(prev => [...prev, {\n        question: pendingQuestions[currentQIndex],\n        answer: text\n      }]);\n      const qText = (pendingQuestions[currentQIndex] || \"\").toLowerCase();\n      if (qText.includes(\"name\") && !contact.name) setContact(c => ({\n        ...c,\n        name: text\n      }));\n      if (qText.includes(\"email\") && !contact.email) setContact(c => ({\n        ...c,\n        email: text\n      }));\n      if (qText.includes(\"phone\") && !contact.phone) setContact(c => ({\n        ...c,\n        phone: text\n      }));\n      setInput(\"\");\n      if (currentQIndex + 1 < pendingQuestions.length) {\n        const nextIndex = currentQIndex + 1;\n        setCurrentQIndex(nextIndex);\n        pushMessage({\n          from: \"bot\",\n          text: pendingQuestions[nextIndex]\n        });\n      } else {\n        await sendFollowUp();\n      }\n      return;\n    }\n    pushMessage({\n      from: \"user\",\n      text\n    });\n    setInput(\"\");\n    setLastUserQuery(text);\n    await sendInitial(text);\n  }\n  function _extract_sow_b64_from_last_bot() {\n    const sow_text = messages.filter(m => m.from === \"bot\").map(m => m.text).join(\"\\n\\n\");\n    try {\n      return btoa(unescape(encodeURIComponent(sow_text)));\n    } catch (e) {\n      return btoa(sow_text);\n    }\n  }\n\n  // in handleCompletedResponse, only ask missing contact questions once\n  async function handleCompletedResponse(data) {\n    try {\n      var _res$data;\n      // if name/email missing, request them (but don't duplicate if already asked)\n      const missing = [];\n      if (!_alreadyAnsweredContact(\"name\")) missing.push(\"What's your name?\");\n      if (!_alreadyAnsweredContact(\"email\")) missing.push(\"What's your email?\");\n      if (missing.length > 0) {\n        setPendingQuestions(missing);\n        setCurrentQIndex(0);\n        pushMessage({\n          from: \"bot\",\n          text: missing[0]\n        });\n        // save the completed payload to finalize once contact provided\n        window.__pending_completed_payload = data;\n        return;\n      }\n\n      // create PDF\n      pushMessage({\n        from: \"bot\",\n        text: \"Creating your estimate PDF...\"\n      });\n      const title = `ProjectQuote-${Date.now()}`;\n      const payload = {\n        sow_b64: data.sow,\n        estimate: data.estimate,\n        title\n      };\n      const res = await axios.post(\"/api/sow/create\", payload);\n      const download_url = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.download_url;\n\n      // short message with link only (no sow or estimate text)\n      pushMessage({\n        from: \"bot\",\n        text: \"Estimate created. Download or share:\",\n        url: download_url\n      });\n      setLatestSowB64(data.sow || null);\n      setQuoteCreated(true);\n      setCompleted(true);\n      if (contact.name && contact.email) {\n        await sendLead({\n          completed: true,\n          sow_b64: data.sow\n        });\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"create pdf\", err);\n      pushMessage({\n        from: \"bot\",\n        text: \"Failed to create estimate PDF. Try again later.\"\n      });\n    }\n  }\n\n  // when contact becomes available, finalize any pending completed payload\n  useEffect(() => {\n    if (contact.name && contact.email && window.__pending_completed_payload) {\n      const pending = window.__pending_completed_payload;\n      window.__pending_completed_payload = null;\n      handleCompletedResponse(pending);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contact.name, contact.email]);\n  async function sendLead({\n    completed = false,\n    sow_b64 = null\n  } = {}) {\n    if (!contact.name || !contact.email) return;\n    try {\n      const payload = {\n        name: contact.name,\n        email: contact.email,\n        message: completed ? \"Project quote completed via estimator\" : \"Chat interrupted / incomplete - request follow up\",\n        sow_b64,\n        chat: messages\n      };\n      await axios.post(\"/api/hubspot/send\", payload);\n      pushMessage({\n        from: \"bot\",\n        text: \"Thanks â€” your lead was sent to our sales team.\"\n      });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"sendLead\", err);\n      pushMessage({\n        from: \"bot\",\n        text: \"Unable to send contact to sales automatically.\"\n      });\n    }\n  }\n  async function handleClose() {\n    if (!contact.name || !contact.email) {\n      const ok = window.confirm(\"You haven't provided name and email. Sales team needs contact info to follow up. Close anyway?\");\n      if (!ok) return;\n    }\n    if (!completed && (contact.name || contact.email || contact.phone)) {\n      await sendLead({\n        completed: false,\n        sow_b64: _extract_sow_b64_from_last_bot()\n      });\n    }\n    onClose && onClose();\n  }\n  function handleShareCurrentLink() {\n    const last = [...messages].reverse().find(m => m.url);\n    if (last && last.url) {\n      navigator.clipboard.writeText(last.url);\n      pushMessage({\n        from: \"bot\",\n        text: \"Link copied.\"\n      });\n    } else {\n      pushMessage({\n        from: \"bot\",\n        text: \"No quote link available yet.\"\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-window ${position === \"bottom-left\" ? \"chat-btn-left\" : \"chat-btn-right\"}`,\n    style: {\n      width: 420,\n      boxShadow: \"0 6px 18px rgba(15,23,42,0.12)\",\n      borderRadius: 10,\n      overflow: \"hidden\",\n      fontFamily: \"Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 12,\n        borderBottom: \"1px solid #eee\",\n        background: \"#fff\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            fontSize: 14\n          },\n          children: [\"Project Quote & Estimator (\", mode, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: \"#6b7280\"\n          },\n          children: \"Describe your project and I'll help estimate it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClose,\n        style: {\n          background: \"transparent\",\n          color: \"#374151\",\n          padding: \"8px 12px\",\n          borderRadius: 8,\n          border: \"1px solid #e5e7eb\",\n          cursor: \"pointer\"\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: listRef,\n      style: {\n        padding: 12,\n        height: 340,\n        overflowY: \"auto\",\n        background: \"#f8fbff\"\n      },\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10,\n          display: \"flex\",\n          justifyContent: m.from === \"user\" ? \"flex-end\" : \"flex-start\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: \"78%\",\n            display: \"inline-block\",\n            padding: \"10px 12px\",\n            borderRadius: 12,\n            background: m.from === \"user\" ? \"#eef2ff\" : \"#ffffff\",\n            boxShadow: m.from === \"user\" ? \"none\" : \"0 1px 2px rgba(0,0,0,0.03)\",\n            color: \"#111827\",\n            fontSize: 13,\n            lineHeight: \"18px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: m.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), m.url && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: m.url,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              style: {\n                color: \"#1d4ed8\"\n              },\n              children: \"Download estimate PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: 8,\n                padding: \"6px 8px\",\n                borderRadius: 6,\n                border: \"1px solid #e5e7eb\",\n                background: \"transparent\",\n                cursor: \"pointer\"\n              },\n              onClick: () => {\n                if (m.url) {\n                  navigator.clipboard.writeText(m.url);\n                  pushMessage({\n                    from: \"bot\",\n                    text: \"Link copied.\"\n                  });\n                }\n              },\n              children: \"Copy link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 12,\n        borderTop: \"1px solid #eee\",\n        background: \"#fff\",\n        display: \"flex\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: pendingQuestions.length > 0 ? \"Answer the question...\" : \"Describe your project...\",\n        style: {\n          flex: 1,\n          padding: \"10px 12px\",\n          borderRadius: 8,\n          border: \"1px solid #e6eef8\"\n        },\n        onKeyDown: e => {\n          if (e.key === \"Enter\") handleSend();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: sending,\n        style: {\n          background: sending ? \"#94a3b8\" : \"#1d4ed8\",\n          color: \"#fff\",\n          padding: \"8px 14px\",\n          borderRadius: 10,\n          border: \"none\",\n          boxShadow: \"0 2px 6px rgba(0,0,0,0.08)\",\n          cursor: sending ? \"not-allowed\" : \"pointer\"\n        },\n        children: sending ? \"Sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10,\n        borderTop: \"1px solid #f1f5f9\",\n        background: \"#fff\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#6b7280\",\n          fontSize: 12,\n          alignSelf: \"center\"\n        },\n        children: quoteCreated ? \"Quote ready â€” link shown in chat.\" : \"Chat saved automatically.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShareCurrentLink,\n          style: {\n            background: \"transparent\",\n            color: \"#374151\",\n            padding: \"8px 12px\",\n            borderRadius: 8,\n            border: \"1px solid #e5e7eb\",\n            cursor: \"pointer\"\n          },\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"fXRdFr5Rl9KAnUHVLwPyhHJV2Q4=\");\n_c = ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatWindow","onClose","position","mode","_s","messages","setMessages","from","text","input","setInput","sending","setSending","pendingQuestions","setPendingQuestions","currentQIndex","setCurrentQIndex","answers","setAnswers","lastUserQuery","setLastUserQuery","completed","setCompleted","contact","setContact","name","email","phone","quoteCreated","setQuoteCreated","latestSowB64","setLatestSowB64","saveTimerRef","listRef","current","scrollTop","scrollHeight","clearTimeout","setTimeout","post","title","Date","now","err","console","error","pushMessage","m","prev","_alreadyAnsweredContact","field","key","toLowerCase","a","q","question","includes","answer","sendInitial","res","client_info","data","contactQs","push","serverQs","Array","isArray","questions","serverQsFiltered","filter","ql","allQs","length","status","handleCompletedResponse","summary","sendFollowUp","followPayload","JSON","stringify","handleSend","trim","qText","c","nextIndex","_extract_sow_b64_from_last_bot","sow_text","map","join","btoa","unescape","encodeURIComponent","e","_res$data","missing","window","__pending_completed_payload","payload","sow_b64","sow","estimate","download_url","url","sendLead","pending","message","chat","handleClose","ok","confirm","handleShareCurrentLink","last","reverse","find","navigator","clipboard","writeText","className","style","width","boxShadow","borderRadius","overflow","fontFamily","children","padding","borderBottom","background","display","alignItems","gap","flex","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","border","cursor","ref","height","overflowY","i","marginBottom","justifyContent","maxWidth","lineHeight","marginTop","href","target","rel","marginLeft","borderTop","value","onChange","placeholder","onKeyDown","disabled","alignSelf","_c","$RefreshReg$"],"sources":["/workspaces/project-orchestrator/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n\nexport default function ChatWindow({ onClose, position = \"bottom-right\", mode = \"production\" }) {\n  const [messages, setMessages] = useState([\n    { from: \"bot\", text: \"Hi â€” describe your project and I'll help estimate it.\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [sending, setSending] = useState(false);\n  const [pendingQuestions, setPendingQuestions] = useState([]); // questions queue\n  const [currentQIndex, setCurrentQIndex] = useState(0);\n  const [answers, setAnswers] = useState([]); // collected answers in order\n  const [lastUserQuery, setLastUserQuery] = useState(\"\"); // original user text for follow-up\n  const [completed, setCompleted] = useState(false); // whether flow finished with an estimate\n  const [contact, setContact] = useState({ name: \"\", email: \"\", phone: \"\" });\n  const [quoteCreated, setQuoteCreated] = useState(false);\n  const [latestSowB64, setLatestSowB64] = useState(null);\n  const saveTimerRef = useRef(null);\n  const listRef = useRef(null);\n\n  useEffect(() => {\n    if (listRef.current) listRef.current.scrollTop = listRef.current.scrollHeight;\n  }, [messages, pendingQuestions, currentQIndex]);\n\n  // Auto-save chat when messages change (debounced).\n  useEffect(() => {\n    if (saveTimerRef.current) clearTimeout(saveTimerRef.current);\n    saveTimerRef.current = setTimeout(async () => {\n      try {\n        await axios.post(\"/api/chat/save\", { title: `chat-${Date.now()}.json`, messages });\n      } catch (err) {\n        // silent\n        // eslint-disable-next-line no-console\n        console.error(\"autosave failed\", err);\n      }\n    }, 1000);\n    return () => clearTimeout(saveTimerRef.current);\n  }, [messages]);\n\n  const pushMessage = (m) => setMessages((prev) => [...prev, m]);\n\n  // helper: detect if contact question already answered (in contact state or answers list)\n  function _alreadyAnsweredContact(field) {\n    const key = field.toLowerCase();\n    if (key === \"name\" && contact.name) return true;\n    if (key === \"email\" && contact.email) return true;\n    for (let a of answers) {\n      const q = (a.question || \"\").toLowerCase();\n      if (q.includes(key) && a.answer) return true;\n    }\n    return false;\n  }\n\n  async function sendInitial(text) {\n    setSending(true);\n    try {\n      const res = await axios.post(\"/api/message\", { text, client_info: {}, mode });\n      const data = res.data;\n\n      const contactQs = [];\n      if (!_alreadyAnsweredContact(\"name\")) contactQs.push(\"What's your name?\");\n      if (!_alreadyAnsweredContact(\"email\")) contactQs.push(\"What's your email?\");\n      const serverQs = Array.isArray(data.questions) ? data.questions : [];\n      // remove any serverQs that are duplicates of contactQs\n      const serverQsFiltered = serverQs.filter((q) => {\n        const ql = (q || \"\").toLowerCase();\n        if (ql.includes(\"name\") && _alreadyAnsweredContact(\"name\")) return false;\n        if (ql.includes(\"email\") && _alreadyAnsweredContact(\"email\")) return false;\n        return true;\n      });\n      const allQs = [...contactQs, ...serverQsFiltered];\n\n      if (allQs.length > 0) {\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        setAnswers([]);\n        pushMessage({ from: \"bot\", text: allQs[0] });\n      } else {\n        if (contactQs.length > 0) {\n          setPendingQuestions(contactQs);\n          setCurrentQIndex(0);\n          setAnswers([]);\n          pushMessage({ from: \"bot\", text: contactQs[0] });\n        } else if (data.status === \"completed\") {\n          await handleCompletedResponse(data);\n        } else if (data.summary) {\n          pushMessage({ from: \"bot\", text: data.summary });\n        }\n      }\n    } catch (err) {\n      pushMessage({ from: \"bot\", text: \"Error contacting server.\" });\n    } finally {\n      setSending(false);\n    }\n  }\n\n  async function sendFollowUp() {\n    setSending(true);\n    try {\n      const followPayload = { text: lastUserQuery, client_info: { answers }, mode };\n      const res = await axios.post(\"/api/message\", followPayload);\n      const data = res.data;\n\n      setPendingQuestions([]);\n      setCurrentQIndex(0);\n      setAnswers([]);\n\n      if (data.status === \"completed\") {\n        await handleCompletedResponse(data);\n      } else if (Array.isArray(data.questions) && data.questions.length > 0) {\n        const contactQs = [];\n        if (!contact.name) contactQs.push(\"What's your name?\");\n        if (!contact.email) contactQs.push(\"What's your email?\");\n        const allQs = [...contactQs, ...data.questions];\n        setPendingQuestions(allQs);\n        setCurrentQIndex(0);\n        pushMessage({ from: \"bot\", text: allQs[0] });\n      } else {\n        pushMessage({ from: \"bot\", text: JSON.stringify(data) });\n      }\n    } catch (err) {\n      pushMessage({ from: \"bot\", text: \"Error contacting server on follow-up.\" });\n    } finally {\n      setSending(false);\n    }\n  }\n\n  async function handleSend() {\n    const text = input.trim();\n    if (!text) return;\n\n    if (pendingQuestions.length > 0) {\n      pushMessage({ from: \"user\", text });\n      setAnswers((prev) => [...prev, { question: pendingQuestions[currentQIndex], answer: text }]);\n\n      const qText = (pendingQuestions[currentQIndex] || \"\").toLowerCase();\n      if (qText.includes(\"name\") && !contact.name) setContact((c) => ({ ...c, name: text }));\n      if (qText.includes(\"email\") && !contact.email) setContact((c) => ({ ...c, email: text }));\n      if (qText.includes(\"phone\") && !contact.phone) setContact((c) => ({ ...c, phone: text }));\n\n      setInput(\"\");\n\n      if (currentQIndex + 1 < pendingQuestions.length) {\n        const nextIndex = currentQIndex + 1;\n        setCurrentQIndex(nextIndex);\n        pushMessage({ from: \"bot\", text: pendingQuestions[nextIndex] });\n      } else {\n        await sendFollowUp();\n      }\n      return;\n    }\n\n    pushMessage({ from: \"user\", text });\n    setInput(\"\");\n    setLastUserQuery(text);\n    await sendInitial(text);\n  }\n\n  function _extract_sow_b64_from_last_bot() {\n    const sow_text = messages.filter((m) => m.from === \"bot\").map((m) => m.text).join(\"\\n\\n\");\n    try {\n      return btoa(unescape(encodeURIComponent(sow_text)));\n    } catch (e) {\n      return btoa(sow_text);\n    }\n  }\n\n  // in handleCompletedResponse, only ask missing contact questions once\n  async function handleCompletedResponse(data) {\n    try {\n      // if name/email missing, request them (but don't duplicate if already asked)\n      const missing = [];\n      if (!_alreadyAnsweredContact(\"name\")) missing.push(\"What's your name?\");\n      if (!_alreadyAnsweredContact(\"email\")) missing.push(\"What's your email?\");\n      if (missing.length > 0) {\n        setPendingQuestions(missing);\n        setCurrentQIndex(0);\n        pushMessage({ from: \"bot\", text: missing[0] });\n        // save the completed payload to finalize once contact provided\n        window.__pending_completed_payload = data;\n        return;\n      }\n\n      // create PDF\n      pushMessage({ from: \"bot\", text: \"Creating your estimate PDF...\" });\n\n      const title = `ProjectQuote-${Date.now()}`;\n      const payload = { sow_b64: data.sow, estimate: data.estimate, title };\n      const res = await axios.post(\"/api/sow/create\", payload);\n      const download_url = res?.data?.download_url;\n\n      // short message with link only (no sow or estimate text)\n      pushMessage({ from: \"bot\", text: \"Estimate created. Download or share:\", url: download_url });\n\n      setLatestSowB64(data.sow || null);\n      setQuoteCreated(true);\n      setCompleted(true);\n\n      if (contact.name && contact.email) {\n        await sendLead({ completed: true, sow_b64: data.sow });\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"create pdf\", err);\n      pushMessage({ from: \"bot\", text: \"Failed to create estimate PDF. Try again later.\" });\n    }\n  }\n\n  // when contact becomes available, finalize any pending completed payload\n  useEffect(() => {\n    if ((contact.name && contact.email) && window.__pending_completed_payload) {\n      const pending = window.__pending_completed_payload;\n      window.__pending_completed_payload = null;\n      handleCompletedResponse(pending);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contact.name, contact.email]);\n\n  async function sendLead({ completed = false, sow_b64 = null } = {}) {\n    if (!contact.name || !contact.email) return;\n    try {\n      const payload = {\n        name: contact.name,\n        email: contact.email,\n        message: completed ? \"Project quote completed via estimator\" : \"Chat interrupted / incomplete - request follow up\",\n        sow_b64,\n        chat: messages\n      };\n      await axios.post(\"/api/hubspot/send\", payload);\n      pushMessage({ from: \"bot\", text: \"Thanks â€” your lead was sent to our sales team.\" });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\"sendLead\", err);\n      pushMessage({ from: \"bot\", text: \"Unable to send contact to sales automatically.\" });\n    }\n  }\n\n  async function handleClose() {\n    if (!contact.name || !contact.email) {\n      const ok = window.confirm(\"You haven't provided name and email. Sales team needs contact info to follow up. Close anyway?\");\n      if (!ok) return;\n    }\n    if (!completed && (contact.name || contact.email || contact.phone)) {\n      await sendLead({ completed: false, sow_b64: _extract_sow_b64_from_last_bot() });\n    }\n    onClose && onClose();\n  }\n\n  function handleShareCurrentLink() {\n    const last = [...messages].reverse().find((m) => m.url);\n    if (last && last.url) {\n      navigator.clipboard.writeText(last.url);\n      pushMessage({ from: \"bot\", text: \"Link copied.\" });\n    } else {\n      pushMessage({ from: \"bot\", text: \"No quote link available yet.\" });\n    }\n  }\n\n  return (\n    <div\n      className={`chat-window ${position === \"bottom-left\" ? \"chat-btn-left\" : \"chat-btn-right\"}`}\n      style={{\n        width: 420,\n        boxShadow: \"0 6px 18px rgba(15,23,42,0.12)\",\n        borderRadius: 10,\n        overflow: \"hidden\",\n        fontFamily: \"Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial\"\n      }}\n    >\n      <div style={{ padding: 12, borderBottom: \"1px solid #eee\", background: \"#fff\", display: \"flex\", alignItems: \"center\", gap: 8 }}>\n        <div style={{ flex: 1 }}>\n          <strong style={{ fontSize: 14 }}>Project Quote & Estimator ({mode})</strong>\n          <div style={{ fontSize: 12, color: \"#6b7280\" }}>Describe your project and I'll help estimate it.</div>\n        </div>\n        <button\n          onClick={handleClose}\n          style={{\n            background: \"transparent\",\n            color: \"#374151\",\n            padding: \"8px 12px\",\n            borderRadius: 8,\n            border: \"1px solid #e5e7eb\",\n            cursor: \"pointer\"\n          }}\n        >\n          Close\n        </button>\n      </div>\n\n      <div ref={listRef} style={{ padding: 12, height: 340, overflowY: \"auto\", background: \"#f8fbff\" }}>\n        {messages.map((m, i) => (\n          <div key={i} style={{ marginBottom: 10, display: \"flex\", justifyContent: m.from === \"user\" ? \"flex-end\" : \"flex-start\" }}>\n            <div\n              style={{\n                maxWidth: \"78%\",\n                display: \"inline-block\",\n                padding: \"10px 12px\",\n                borderRadius: 12,\n                background: m.from === \"user\" ? \"#eef2ff\" : \"#ffffff\",\n                boxShadow: m.from === \"user\" ? \"none\" : \"0 1px 2px rgba(0,0,0,0.03)\",\n                color: \"#111827\",\n                fontSize: 13,\n                lineHeight: \"18px\"\n              }}\n            >\n              <div>{m.text}</div>\n              {m.url && (\n                <div style={{ marginTop: 8 }}>\n                  <a href={m.url} target=\"_blank\" rel=\"noreferrer\" style={{ color: \"#1d4ed8\" }}>\n                    Download estimate PDF\n                  </a>\n                  <button\n                    style={{ marginLeft: 8, padding: \"6px 8px\", borderRadius: 6, border: \"1px solid #e5e7eb\", background: \"transparent\", cursor: \"pointer\" }}\n                    onClick={() => {\n                      if (m.url) {\n                        navigator.clipboard.writeText(m.url);\n                        pushMessage({ from: \"bot\", text: \"Link copied.\" });\n                      }\n                    }}\n                  >\n                    Copy link\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div style={{ padding: 12, borderTop: \"1px solid #eee\", background: \"#fff\", display: \"flex\", gap: 8 }}>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder={pendingQuestions.length > 0 ? \"Answer the question...\" : \"Describe your project...\"}\n          style={{ flex: 1, padding: \"10px 12px\", borderRadius: 8, border: \"1px solid #e6eef8\" }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") handleSend();\n          }}\n        />\n        <button\n          onClick={handleSend}\n          disabled={sending}\n          style={{\n            background: sending ? \"#94a3b8\" : \"#1d4ed8\",\n            color: \"#fff\",\n            padding: \"8px 14px\",\n            borderRadius: 10,\n            border: \"none\",\n            boxShadow: \"0 2px 6px rgba(0,0,0,0.08)\",\n            cursor: sending ? \"not-allowed\" : \"pointer\"\n          }}\n        >\n          {sending ? \"Sending...\" : \"Send\"}\n        </button>\n      </div>\n\n      <div style={{ padding: 10, borderTop: \"1px solid #f1f5f9\", background: \"#fff\", display: \"flex\", justifyContent: \"space-between\", gap: 8 }}>\n        <div style={{ color: \"#6b7280\", fontSize: 12, alignSelf: \"center\" }}>\n          {quoteCreated ? \"Quote ready â€” link shown in chat.\" : \"Chat saved automatically.\"}\n        </div>\n        <div style={{ display: \"flex\", gap: 8 }}>\n          <button\n            onClick={handleShareCurrentLink}\n            style={{\n              background: \"transparent\",\n              color: \"#374151\",\n              padding: \"8px 12px\",\n              borderRadius: 8,\n              border: \"1px solid #e5e7eb\",\n              cursor: \"pointer\"\n            }}\n          >\n            Share\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}